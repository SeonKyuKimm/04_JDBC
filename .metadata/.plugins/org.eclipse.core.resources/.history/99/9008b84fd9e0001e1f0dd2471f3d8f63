package edu.kh.jdbc1;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;

public class JDBCExample1 {

	public static void main(String[] args) {
		
		/* JDBC (Java DataBase Connectivity) : Java에서 DB에 연결할 수 있게 해주는 Java Programming API (Java에 기본 내장된 인터페이스)
		 java.sql 페이지에서 제공한다.
			
		 JDBC를 이용한 어플리케이션 만들 때 필요한것
		   1 . Java의 JDBC 관련 인터페이스
		   2 . DBMS (Oracle)
		   3 . Oracle에서 Java와 연결할 때 사용할 
		 	   JDBC를 상속받아 구현할 클래스 모음 (ojdbc10.jar 라이브러리)
		 */
		
		
		// 1단계 : JDBC 객체 참조변수 선언 ( java.sql 패키지에 있는 인터페이스 )
		
		Connection conn = null;
		// DB 연결정보를 담은 객체
		// -> DBMS 타입, 이름, IP, Port, 계정명, 비밀번호 저장
		// -> DBeaver의 계정 접속 방법과 유사하다
		// * Java와 DB사이를 연결해주는 통로역할을 한다.
		
		Statement stmt = null;
		// Connection 을 통해서 
		// SQL문을 DB에 전달하여 실행하고(수행하고)
		// 생성된 결과( ResultSet, INSERT , DELETE 등의 DML 성공한 행의 개수 )를 반환하는데 사용되는 객체
		
		
		ResultSet rs = null;
		// SELECT 질의 성공 시 반환되는데
		// 조회 결과 집합을 나타내는 객체다
		 
		
		try {
		
		// 2단계 : 참조변수에 알맞은 객체 대입
		
		}catch(ClassNotFoundException e) {
			System.out.println("JDBC 드라이버 경로가 잘못 작성됨.");
			
			
		}
		
		
		
		
		
	}
}
